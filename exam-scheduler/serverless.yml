service: exam-scheduler

frameworkVersion: "3"

custom:
  tableName: "scheduler-table-${sls:stage}"




provider:
  name: aws
  runtime: nodejs14.x
  profile: registration
  region: ap-south-1
  httpApi:
    cors: true

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [SchedulerTable, Arn]
  environment:
    SCHEDULER_TABLE: ${self:custom.tableName}





functions:
  getBranch:
    name: getBranchName
    handler: src/scheduler/index.getBranch
    events:
      - httpApi:
          method: GET
          path: /branch
          

  getDepartment:
    name: getDepartmentName
    handler: src/scheduler/index.getDepartment
    events:
      - httpApi:
          method: GET
          path: /department

  getExamType:
    name: getExamTypeName 
    handler: src/scheduler/index.getExamType
    events:
      - httpApi:
          method: GET
          path: /examType

  getSubject:
    name: getSubjectNames
    handler: src/scheduler/index.getSubject
    events:
      - httpApi:
          method: GET
          path: /subject

  postSchedule:
    name: postSchedule
    handler: src/scheduler/index.postSchedule
    events:
      - httpApi:
          method: POST
          path: /schedule

  getSubjectSchedule:
    name: getSubjectSchedule
    handler: src/scheduler/index.getSubjectSchedule
    events:
      - httpApi:
          method: GET
          path: /subject/schedule

  getLabSchedule:
    name: getLabSchedule
    handler: src/scheduler/index.getLabSchedule
    events:
      - httpApi:
          method: GET
          path: /lab/schedule

  deleteSchedule:
    name: deleteSchedule
    handler: src/scheduler/index.deleteSchedule
    events:
      - httpApi:
          method: DELETE
          path: /delete

resources:
  Resources:
    SchedulerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
